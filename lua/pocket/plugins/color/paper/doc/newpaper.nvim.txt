*newpaper*

Author: Yurii Kulchevich <yorik1984@gmail.com>

================================================================================
CONTENTS                                                     *newpaper.contents*

1. Features ...............................................: |newpaper.features|
2. Styles .................................................: |newpaper.styles|
3. Setup ..................................................: |newpaper.setup()|
4. Config .................................................: |newpaper.config|
    4.1 Default config ....................................: |newpaper.default|
    4.2 Example config ....................................: |newpaper.example|
5. Commands ...............................................: |newpaper.commands|
6. Lualine setings ........................................: |newpaper.lualine|

================================================================================
1. FEATURES                                                  *newpaper.features*

*newpaper.nvim* is a 'colorscheme' written in |lua| with built in support for
|LSP|, |treesitter| and many more plugins.

There are 2 |newpaper.styles| to choose from:
    • light
    • dark

A wide array of supprted plugins like:
    • bufferline.nvim
    • cheatsheet.nvim
    • Dashboard
    • flash.nvim
    • fugitive
    • Git Gutter
    • Git Signs
    • git-messenger
    • glyph-palette.vim
    • headlines.nvim
    • highlight-undo.nvim
    • Indent-Blankline.nvim
    • lazy.nvim
    • lazygit.nvim
    • litee.nvim
    • LSP Diagnostics
    • lspsaga
    • Lualine
    • mason.nvim
    • Neogit
    • noice.nvim
    • nvim-cmp
    • nvim-dap
    • nvim-dap-ui
    • nvim-dap-virtual-text
    • nvim-lsp-installer
    • nvim-notify
    • nvim-treesitter-context
    • Nvim-Tree.lua
    • nvim-web-devicons
    • rainbow-delimiters.nvim
    • symbols-outline.nvim
    • Telescope.nvim
    • todo-comments.nvim
    • TreeSitter
    • Trouble
    • vim-illuminate
    • Vim-Jinja2-Syntax
    • vim-LanguageTool
    • vim-lua
    • vim-rbs
    • vim-ruby
    • vim-sneak
    • vim-toml
    • vimtex
    • virt-column.nvim
    • vista.vim
    • WhichKey.nvim
    • zotcite

Ability to have a different background on sidebar windows like Nvim-Tree,
Terminal, Whichkey, QuickFix etc.

Asynchronous highlight loading which makes the theme extremely fast.

Added functions for live style switching, without the need to reload NeoVim.

Support |lsp-semantic-highlight|.

Support |regexp| highlight with treesitter.

================================================================================
2. STYLES                                                      *newpaper.styles*

The theme comes in 2 styles to choose from.

Light: ~
    Default style. This is the only light style in this colorscheme. It comes
    with a PaperColor white background.

Dark: ~
    This style is loosely based on the PaperColor dark color theme.

Styles can be applying by setup |newpaper.config|
See in |newpaper.example|

================================================================================
3. FUNCTIONS                                                *newpaper.functions*

To use the |newpaper.default| settings, just apply the theme.

                                                              *newpaper.setup()*
setup({config})

Optionally, the first parameter can be a configuration table.
All values that are not passed in the table are set to the default value.
List values get merged with the default list value.

`setup` is idempotent, meaning you can call it multiple times, and each call
will reset newpaper.

Parameters: ~
    • {config} (|newpaper.config|) Configuration table

Example: ~

Lua: ~
>lua
    require("newpaper").setup()
<
Vim-Script: ~
>vim
    colorscheme newpaper
<
================================================================================
4. CONFIG                                                      *newpaper.config*

What sets newpaper.nvim appart from most Vim/NeoVim themes is the wide array
of options for customising the theme.

All options are set using global variables.

In order for these settings to take effect, they should be placed in your
`init.lua` before applying the colorscheme.

Fields: ~

                                                         *newpaper.config.style*
    • {style}       (`"dark"`| `"light"`)
                    The theme comes in two styles.

                    Default: `"light"` ~

                                                     *newpaper.config.lightness*
    • {lightness}   (number: `-1 ... 1`): from `"#000000"` to `"#FFFFFF"`
                    Make all supported highlight groups lighter or darker.
                    Useful with `config.saturation` to make more beauty and
                    eye-friendly view.

                    Default: `0` ~

                    Recommended: `-0.2` ... `0.2` ~

                                                    *newpaper.config.saturation*
    • {saturation}  (number: `-1 ... 1`)
                    Change color saturation of all supported highlight groups.
                    Useful with `config.lightness` to make more beauty and
                    eye-friendly view.

                    Default: `0` ~

                    Recommended: `-0.2` ... `0.2` ~

                                                     *newpaper.config.greyscale*
    • {greyscale}   (`"lightness"`| `"average"`| `"luminosity"`| `false`)
                    Make all supported highlight groups in greyscale palette.
                    Useful with `config.lightness` and `config.saturation`
                    to make more beauty and eye-friendly view.

                    Default: `false` ~

                    Recommended: `"luminosity"`~

                                            *newpaper.config.editor_better_view*
    • {editor_better_view} (bool)
                    Make some interface like menu, title of editor and plugins
                    menu bold and italic.

                    Default: `true` ~

                                                      *newpaper.config.terminal*
    • {terminal}    (`"bg"`| `"contrast"`| `"inverse"`| `"inverse_transparent"`)
                    Make 'terminal' window in different styles.

                    Default: `"contrast"` ~

                                             *newpaper.config.sidebars_contrast*
    • {sidebars_contrast} (table)
                    Set a contrast background on sidebar-like windows.
                    `"NvimTree"` and `"Trouble"` has own highlight colors.
                    Can be overridden separately from others sidebars.

                    Default: `{}` ~

                    Example: ~
>lua
                    sidebars_contrast = {
                        "NvimTree",
                        "vista_kind",
                        "Trouble",
                    },
<
                                                *newpaper.config.contrast_float*
    • {contrast_float} (bool)
                    Make popup menus like nvim-cmp, lspsaga have a different
                    foreground and background.

                    Default: `true` ~

                                            *newpaper.config.contrast_telescope*
    • {contrast_telescope} (bool)
                    Make Telescope have a different foreground and background.

                    Default: `true` ~

                                                *newpaper.config.operators_bold*
    • {operators_bold} (bool)
                    Make booleans, escape characters, operators like
                    `=`, `/`, `*`, `+`, `-`, `%`, `<`, `>`, `|` etc bold.

                    Default: `true` ~

                                            *newpaper.config.delimiters_bold*
    • {delimiters_bold} (bool)
                    Make delimiter `,`,`;`,`:`,`.` bold

                    Default: `false` ~

                                                 *newpaper.config.brackets_bold*
    • {brackets_bold} (bool)
                    Make brackets like brackets`, `[]` bold.

                    Default: `false` ~

                                            *newpaper.config.delim_rainbow_bold*
    • {delim_rainbow_bold} (bool) 
                    Make rainbow delimiters `{}`, `()`, `[]` or others bold.
                    Use plugin to highlight like |rainbow-delimiters|.

                    Default: `false` ~

                                                      *newpaper.config.booleans*
    • {booleans}    (string)
                    Make boleans like `true`, `false` bold, italic, NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold"` ~

                                                      *newpaper.config.keywords*
    • {keywords}    (string)
                    Make keywords like `if`, `for`, `def` bold, italic, NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold"` ~

                                                  *newpaper.config.doc_keywords*
    • {doc_keywords} (string)
                    Make documenting keywords like `@param` bold, italic, NONE.
                    Only support for: `treesitter-luadoc`.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold,italic"` ~

                                                         *newpaper.config.regex*
    • {regex}       (string)
                    Make regex  bold, italic or NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold"` ~

                                                      *newpaper.config.regex_bg*
    • {regex_bg}    (bool)
                    Enable background color for regex capturing groups.

                    Default: `true` ~

                                                          *newpaper.config.tags*
    • {tags}        (string)
                    Make HTML tags bold, italic or NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold"` ~

                                            *newpaper.config.tags_brackets_bold*
    • {tags_brackets_bold} (bool)
                    Make tags delimiters like `<` or `/>` bold.

                    Default: `true` ~

                                                     *newpaper.config.tex_major*
    • {tex_major}   (string)
                    Make only major tex word like `\documentclass`, `\section`
                    bold, italic or NONE.
                    Work only with `vimtex`(https://github.com/lervag/vimtex).

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `"bold"` ~

                                            *newpaper.config.tex_operators_bold*
    • {tex_operators_bold} (bool)
                    Make tex operators bold.

                    Default: `true` ~

                                             *newpaper.config.tex_brackets_bold*
    • {tex_brackets_bold} (bool)
                    Make tex brackets like `{}`, `[]` bold.

                    Default: `false` ~

                                           *newpaper.config.tex_math_delim_bold*
    • {tex_math_delim_bold} (bool)
                    Make tex math zone delimeters like
                    `\(\)`, `\[\]`, `$ $`, `$$ $$` bold.

                    Default: `false` ~

                                                  *newpaper.config.tex_keywords*
    • {tex_keywords} (string)
                    Make  other tex keywords bold, italic or NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `NONE` ~

                                                      *newpaper.config.tex_zone*
    • {tex_zone}    (string)
                    Make some tex ...Zone...  bold, italic or NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `italic` ~

                                                       *newpaper.config.tex_arg*
    • {tex_arg}     (string) 
                    Make some tex  ...Arg... bold, italic or NONE.

                    Value: `"bold"`, `"italic"`, `"bold,italic"`, `"NONE"` ~

                    Default: `italic` ~

                                               *newpaper.config.error_highlight*
    • {error_highlight} (string)
                    Make spell or `tex`-files errors hightlighting with
                    background, undercurl, both or NONE.

                    Value: `"bg"`, `"undercurl"`, `"both"`, `"NONE"` ~

                    Default: `undercurl` ~

                                                *newpaper.config.italic_strings*
    • {italic_strings} (bool)
                    Make strings italic.

                    Default: `true` ~

                                               *newpaper.config.italic_comments*
    • {italic_comments} (bool)
                    Make comments italic

                    Default: `true` ~

                                           *newpaper.config.italic_doc_comments*
    • {italic_doc_comments} (bool)
                    Make comments documenting code italic.

                    Default: `true` ~

                                              *newpaper.config.italic_functions*
    • {italic_functions} (bool)
                    Make function calls and names italic.

                    Default: `false` ~

                                              *newpaper.config.italic_variables*
    • {italic_variables} (bool)
                    Make variable names and identifiers italic.

                    Default: `false` ~

                                                       *newpaper.config.borders*
    • {borders}     (bool)
                    Enable the border between vertically split windows visible.

                    Default: `true` ~

                                            *newpaper.config.disable_background*
    • {disable_background} (bool)
                    Disable the setting of background color so that NeoVim
                    can use yours terminal background.

                    Default: `false` ~

                                           *newpaper.config.lsp_virtual_text_bg*
    • {lsp_virtual_text_bg} (bool)
                    Enable background color for LSP virtual text.

                    Default: `true` ~

                                                      *newpaper.config.hide_eob*
    • {hide_eob}    (bool)
                    Hide the end of buffer lines (`~`).

                    Default: `false` ~

                                                        *newpaper.config.colors*
    • {colors}      (table)
                    Override the default colors and use your own.
                    Also owerride lualine colors if have same name. See value in `lua/newpaper/colors.lua[12:189, 193:370]`, Default: `{}` ~
                    Example: ~
>lua
                    vim.g.newpaper_colors = {
                        black = "#000000",
                        bg = "#0F111A",
                    }
<
                                               *newpaper.config.colors_advanced*
    • {colors_advanced} (table)
                    Override the advanced default colors and use your own.
                    See value in `lua/newpaper/colors.lua[392:556]`.

                    Default: `{}` ~

                    Example: ~
>lua
                    vim.g.newpaper_colors_advanced = {
                        keywords = "#AA00AA",
                        strings = "#008800",
                    }
<
                                             *newpaper.config.custom_highlights*
    • {custom_highlights} (table)
                    Override the default and plugins highlights groups.
                    Table  predefine any syntax colors.
                    Use `fg`, `bg`, `sp`, `style` options `fg => guifg`,
                    `bg => guibg`, `sp => guisp`, `style => gui`.

                    Default: `{}` ~

                    Example: ~
>lua
                    vim.g.newpaper_custom_highlights = {
                        Number    = { fg = "#00FF00" },
                        rubyClass = { fg = "#00FFF0" },
                        Comment   = { fg = "#FF0000", style = "italic" }
                    }
<
                                                  *newpaper.config.lualine_bold*
    • {lualine_bold} (bool)
                    When true, section headers in the lualine will be bold.

                    Default: `true` ~

                                                 *newpaper.config.lualine_style*
    • {lualine_style} (`"dark"`| `"light"`)
                    Set different style from main theme: `"dark"`, `"light"`.

                    Default: `light` ~

                                               *newpaper.config.devicons_custom*
    • {devicons_custom} (table)
                    Set devicons custom color(override all icons by one color).
                    Use `gui`, `cterm` or both options.

                    Default: `{}` ~

                    Example: ~
>lua
                    vim.g.devicons_custom = { gui = "#FFFF00", cterm = 3 }
<
--------------------------------------------------------------------------------
4.1. DEFAULT CONFIGURATION                                    *newpaper.default*

Default settings: ~
>lua
    require("newpaper").setup({
        style               = "light",
        lightness           = 0,
        saturation          = 0,
        greyscale           = false,
        editor_better_view  = true,
        terminal            = "contrast",
        sidebars_contrast   = {},
        contrast_float      = true,
        contrast_telescope  = true,
        operators_bold      = true,
        delimiters_bold     = false,
        brackets_bold       = false,
        delim_rainbow_bold  = false,
        booleans            = "bold",
        keywords            = "bold",
        doc_keywords        = "bold,italic",
        regex               = "bold",
        regex_bg            = true,
        tags                = "bold",
        tags_brackets_bold  = true,
        tex_major           = "bold",
        tex_operators_bold  = true,
        tex_brackets_bold   = false,
        tex_math_delim_bold = false,
        tex_keywords        = "NONE",
        tex_zone            = "italic",
        tex_arg             = "italic",
        error_highlight     = "undercurl",
        italic_strings      = true,
        italic_comments     = true,
        italic_doc_comments = true,
        italic_functions    = false,
        italic_variables    = false,
        borders             = true,
        disable_background  = false,
        lsp_virtual_text_bg = true,
        hide_eob            = false,
        colors              = {},
        colors_advanced     = {},
        custom_highlights   = {},
        lualine_bold        = true,
        lualine_style       = "light",
        devicons_custom     = {},
    })
<

--------------------------------------------------------------------------------
4.2. EXAMPLE CONFIG                                           *newpaper.example*

Lua with global variables: ~
>lua
    vim.g.newpaper_style             = "dark"
    vim.g.newpaper_keywords          = "italic"
    vim.g.newpaper_borders           = false
    vim.g.newpaper_colors            = { teal = "#0000FF" }
    vim.g.newpaper_colors_advanced   = { keywords = "#AA00AA", strings = "#008800" }
    vim.g.newpaper_custom_highlights = {
        Float     = { fg = vim.g.newpaper_colors.teal },
        Number    = { fg = "#00FF00" },
        rubyClass = { fg = "#00FFF0" },
        Comment   = { fg = "#FF0000", style = "italic,underline" }
    }
<
Lua with setup({}): ~
>lua
    local colors            = { teal = "#0000FF" } -- use one color for many groups
    local colors_advanced   = { keywords = "#AA00AA", strings = "#008800" }
    local custom_highlights = {
              Float     = { fg = colors.teal }, -- prefer override by name
              Number    = { fg = "#00FF00" },   -- but hex colos also good
              rubyClass = { fg = "#00FFF0" },
              Comment   = { fg = "#FF0000", style = "italic,underline" },
          }
    require("newpaper").setup({
        style    = "dark",
        keywords = "italic",
        -- ...
        colors              = colors,
        colors_advanced     = colors_advanced,
        custom_highlights   = custom_highlights,
        -- ...
        devicons_custom     = { gui = "#FFFF00", cterm = 3},
    })
<
================================================================================
5. COMMANDS                                                  *newpaper.commands*

`:NewpaperLight`    Change style to light mode(by default)
`:NewpaperDark`     Change style to dark mode

================================================================================
6. LUALINE SETTINGS                                           *newpaper.lualine*

To enable the newpaper theme for |lualine|, specify it in your lualine settings:
>lua
    require("lualine").setup {
        options = {
            -- ... lualine config
        }
    }
<
Lualine theme name and style automatically using from main theme.

NOTE: ~
You can temporally use just only lualine theme with any colorscheme.
It also depend from `vim.o.background`.

init.lua: ~
>lua
    -- Set bold style
    vim.g.newpaper_lualine_bold = true
    -- If want to enable style like in main colorscheme no need to set style
    -- of lualine
    vim.g.newpaper_lualine_style = "light"
    -- Also you can predefine colors
    vim.g.newpaper_colors = {teal = "#008080"}

    -- disable main theme
    -- require("newpaper").setup()

    -- enable other colorscheme
    -- ...
<
================================================================================
vim:tw=78:ts=4:ft=help:norl:
